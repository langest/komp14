/* Generated By:JJTree: Do not edit this line. Type.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package lexer;

public
class Type extends SimpleNode {

	private String name;
	private TypeType type;

	public Type(int id) {
		super(id);
	}

	public Type(Lexer p, int id) {
		super(p, id);
	}
	
	public enum TypeType {
		INT, INT_ARRAY, BOOLEAN, CUSTOM;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	public void setType(TypeType type) {
		this.type = type;
	}
	
	public TypeType getType() {
		return type;
	}
	
	public String toShortString() {
		if (type == TypeType.CUSTOM) return name;
		return type.toString();
	}
	
	public String toString() {
		if (type == TypeType.CUSTOM) return super.toString() + "(" + name + ")";
		else return super.toString() + "(" + type + ")";
	}

}
/* JavaCC - OriginalChecksum=ae84556a2cae509241b4c4f412ad0bb7 (do not edit this line) */
