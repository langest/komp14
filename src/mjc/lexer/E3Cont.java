/* Generated By:JJTree: Do not edit this line. E3Cont.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package mjc.lexer;

import generator.JasminPrinter;
import mjc.errors.TypeError;
import mjc.type_checker.SymTable;

public
class E3Cont extends SimpleNode {

	private E3ContType type;

	public E3Cont(int id) {
		super(id);
	}

	public E3Cont(Lexer p, int id) {
		super(p, id);
	}

	public E3ContType getType() {
		return type;
	}

	public void setType(E3ContType type) {
		this.type = type;
	}

	public enum E3ContType {
		PLUS, MINUS;
	}
	
	public Type pass2(SymTable symTable, Type inputType) {
		if (type == E3ContType.PLUS) {
			Type type2 = ((E4)children[0]).pass2(symTable);
			if (!inputType.isInt() || !type2.isInt()) {
				throw new TypeError("Invalid types for addition: " + inputType.toShortString() + " and " + type2.toShortString());
			}
			JasminPrinter.print_iadd();
			return ((E3Cont)children[1]).pass2(symTable, type2);
		} else if (type == E3ContType.MINUS) {
			Type type2 = ((E4)children[0]).pass2(symTable);
			if (!inputType.isInt() || !type2.isInt()) {
				throw new TypeError("Invalid types for subtraction: " + inputType.toShortString() + " and " + type2.toShortString());
			}
			JasminPrinter.print_isub();
			return ((E3Cont)children[1]).pass2(symTable, type2);
		} else {
			return inputType;
		}
	}
	
	public String toString() {
		return super.toString() + " " + (children != null ? type == E3ContType.PLUS ? "+" : "-" : "");
	}

}
/* JavaCC - OriginalChecksum=b58a49d84c75c905cbdfb7ea631a16c1 (do not edit this line) */
