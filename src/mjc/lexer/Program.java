/* Generated By:JJTree: Do not edit this line. Program.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package mjc.lexer;

import java.util.*;
import java.io.*;

import mjc.type_checker.SymTable;

public class Program extends SimpleNode {
	public Program(int id) {
		super(id);
	}

	public Program(Lexer p, int id) {
		super(p, id);
	}
	
	public String toString() {
		return super.toString() + Arrays.toString(children);
	}
	
	public void pass1(SymTable symTable) {
		ClassDecl dummyMain = new ClassDecl(0);
		dummyMain.setName(((MainClass)children[0]).getname());
		symTable.addClassNode(dummyMain);
		for (int i = 1; i < children.length; i++) {
			ClassDecl classDecl = (ClassDecl) children[i];
			symTable.openScope();
			classDecl.pass1(symTable);
			symTable.closeScope();
			symTable.addClassNode(classDecl);
		}
	}
	
	public void printEmptyFiles() throws IOException {
		for (Node child: children) {
			String name;
			if (child instanceof MainClass) {
				name = ((MainClass)child).getname();
			} else {
				name = ((ClassDecl)child).getName();
			}
			PrintWriter out = new PrintWriter(new FileWriter(name + ".j"));
			out.println();
			out.close();
		}
	}

}
/* JavaCC - OriginalChecksum=6b7c83e5a50eb4d04d88eba1d58ba34e (do not edit this line) */
